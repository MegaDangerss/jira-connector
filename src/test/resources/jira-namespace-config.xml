<?xml version="1.0" encoding="UTF-8"?>
<!--

  Mule Jira Cloud Connector Copyright (c) MuleSoft, Inc. All rights
  reserved. http://www.mulesoft.com The software in this package is
  published under the terms of the CPAL v1.0 license, a copy of which
  has been included with this distribution in the LICENSE.txt file.
-->

<!--

  This file was automatically generated by the Mule Cloud Connector
  Development Kit
-->

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:jira="http://www.mulesoft.org/schema/mule/jira"
      xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                          http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.1/mule.xsd
                          http://www.mulesoft.org/schema/mule/jira http://www.mulesoft.org/schema/mule/jira/1.0/mule-jira.xsd">


    <jira:config username="fede" password="1024" address="http://localhost:8080/rpc/soap/jirasoapservice-v2"/>

    <flow name="getComment">
        <jira:get-comment id="123"/>
    </flow>

    <flow name="getConfiguration">
        <jira:get-configuration/>
    </flow>

    <flow name="createGroup">
        <jira:create-group groupName="someGroupName" userName="someUserName"/>
    </flow>

    <flow name="getServerInfo">
        <jira:get-server-info/>
    </flow>

    <flow name="getGroup">
        <jira:get-group groupName="someGroupName"/>
    </flow>

    <flow name="createUser">
        <jira:create-user username="someUserName" password="somePassword" fullName="some full name" email="some email"/>
    </flow>

    <flow name="addComment">
        <jira:add-comment issueKey="someIssueKey" commentAuthor="someUserName" commentBody="someComment"/>
    </flow>

    <flow name="getComponents">
        <jira:get-components projectKey="someProjectKey"/>
    </flow>

    <flow name="getUser">
        <jira:get-user username="someUserName"/>
    </flow>

    <flow name="updateGroup">
        <jira:update-group groupName="someGroupName">
            <jira:usernames>
                <jira:username>
                    someUserName
                </jira:username>
            </jira:usernames>
        </jira:update-group>
    </flow>

    <flow name="addUserToGroup">
        <jira:add-user-to-group groupName="someGroupName" userName="someUserName"/>
    </flow>

    <flow name="removeUserFromGroup">
        <jira:remove-user-from-group groupName="someGroupName" userName="someUserName"/>
    </flow>

    <flow name="getIssue">
        <jira:get-issue issueKey="someIssueKey"/>
    </flow>

    <!--<flow name="createIssue">-->
    <!--<-->
    <!--<-->
    <!--</flow>-->

    <!--<flow name="updateIssue">-->
    <!--<-->
    <!--<-->
    <!--</flow>-->

    <flow name="deleteIssue">
        <jira:delete-issue issueKey="someIssueKey"/>
    </flow>

    <flow name="getAvailableActions">
        <jira:get-available-actions issueKey="someIssueKey"/>
    </flow>

    <flow name="getSubTaskIssueTypes">
        <jira:get-sub-task-issue-types/>
    </flow>

    <flow name="createProject">
        <jira:create-project key="someProjectKey" name="someProjectName" description="someProjectDescription"
                             lead="someUserName" permissionSchemeName="somePermissionSchemeName"
                             notificationSchemeName="someNotificationSchemeName"
                             securityShemeName="someSecuritySchemeName" url="someUrl"/>
    </flow>

    <flow name="updateProject">
        <jira:update-project key="someProjectKey" description="someProjectDescription" lead="someUserName"
                             permissionSchemeName="somePermissionSchemeName"
                             notificationSchemeName="someNotificationSchemeName"
                             securityShemeName="someSecuritySchemeName" url="someUrl"/>
    </flow>

    <flow name="getProjectByKey">
        <jira:get-project-by-key projectKey="someProjectKey"/>
    </flow>

    <flow name="removeAllRoleActorsByProject">
        <jira:remove-all-role-actors-by-project projectKey="someProjectKey"/>
    </flow>

    <flow name="getPriorities">
        <jira:get-priorities/>
    </flow>

    <flow name="getResolutions">
        <jira:get-resolutions/>
    </flow>

    <flow name="getIssueTypes">
        <jira:get-issue-types/>
    </flow>

    <flow name="getStatuses">
        <jira:get-statuses/>
    </flow>

    <flow name="getIssueTypesForProject">
        <jira:get-issue-types-for-project projectId="someProjectId"/>
    </flow>

    <flow name="getProjectRoles">
        <jira:get-project-roles/>
    </flow>

    <flow name="getProjectRole">
        <jira:get-project-role id="123"/>
    </flow>

    <flow name="getProjectRoleActors">
        <jira:get-project-role-actors projectRoleId="123" projectKey="someProjectKey"/>
    </flow>

    <flow name="getDefaultRoleActors">
        <jira:get-default-role-actors projectRoleId="123"/>
    </flow>

    <flow name="removeAllRoleActorsByNameAndType">
        <jira:remove-all-role-actors-by-name-and-type name="someName" type="someType"/>
    </flow>

    <flow name="deleteProjectRole">
        <jira:delete-project-role projectRoleId="123" confirm="false"/>
    </flow>

    <flow name="createProjectRole">
        <jira:create-project-role projectRoleName="someProjectRoleName"
                                  projectRoleDescription="someProjectRoleDescription"/>
    </flow>

    <flow name="isProjectRoleNameUnique">
        <jira:is-project-role-name-unique name="someProjectRoleName"/>
    </flow>

    <flow name="addDefaultActorsToProjectRole">
        <jira:add-default-actors-to-project-role projectRoleId="123" type="someType">
            <jira:actors>
                <jira:actor>actor1</jira:actor>
                <jira:actor>actor2</jira:actor>
            </jira:actors>
        </jira:add-default-actors-to-project-role>
    </flow>

    <flow name="removeDefaultActorsFromProjectRole">
        <jira:remove-default-actors-from-project-role remoteProjectRoleId="123" type="someType">
            <jira:actors>
                <jira:actor>actor1</jira:actor>
                <jira:actor>actor2</jira:actor>
            </jira:actors>
        </jira:remove-default-actors-from-project-role>
    </flow>

    <flow name="getAssociatedNotificationSchemes">
        <jira:get-associated-notification-schemes projectRoleId="123"/>
    </flow>

    <flow name="getAssociatedPermissionSchemes">
        <jira:get-associated-permission-schemes projectRoleId="123"/>
    </flow>

    <flow name="deleteProject">
        <jira:delete-project projectKey="someProjectKey"/>
    </flow>

    <flow name="getProjectById">
        <jira:get-project-by-id projectId="123"/>
    </flow>

    <flow name="getVersions">
        <jira:get-versions projectKey="someProjectKey"/>
    </flow>

    <flow name="getComments">
        <jira:get-comments issueKey="someIssueKey"/>
    </flow>

    <flow name="getFavouriteFilters">
        <jira:get-favourite-filters/>
    </flow>

    <flow name="archiveVersion">
        <jira:archive-version projectKey="someProjectKey" versionName="someVersionName" archive="true"/>
    </flow>

    <flow name="getFieldsForEdit">
        <jira:get-fields-for-edit issueKey="someIssueKey"/>
    </flow>

    <flow name="getSubTaskIssueTypesForProject">
        <jira:get-sub-task-issue-types-for-project projectId="someProjectId"/>
    </flow>

    <flow name="login">
        <jira:login username="someUsername" password="somePassword"/>
    </flow>

    <flow name="getSecurityLevel">
        <jira:get-security-level issueKey="someIssueKey"/>
    </flow>

    <flow name="getCustomFields">
        <jira:get-custom-fields/>
    </flow>

    <flow name="logout">
        <jira:logout token="aToken"/>
    </flow>

    <flow name="getProjectWithSchemesById">
        <jira:get-project-with-schemes-by-id projectId="123"/>
    </flow>
</mule>